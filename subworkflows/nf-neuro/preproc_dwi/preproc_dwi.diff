Changes in component 'nf-neuro/preproc_dwi'
'subworkflows/nf-neuro/preproc_dwi/meta.yml' is unchanged
Changes in 'preproc_dwi/main.nf':
--- subworkflows/nf-neuro/preproc_dwi/main.nf
+++ subworkflows/nf-neuro/preproc_dwi/main.nf
@@ -1,7 +1,13 @@
 include { DENOISING_MPPCA as DENOISE_DWI } from '../../../modules/nf-neuro/denoising/mppca/main'
 include { DENOISING_MPPCA as DENOISE_REVDWI } from '../../../modules/nf-neuro/denoising/mppca/main'
+include { IMAGE_POWDERAVERAGE } from '../../../modules/nf-neuro/image/powderaverage/main'
+include { IMAGE_APPLYMASK as BET_DWI } from '../../../modules/nf-neuro/image/applymask/main'
+include { BETCROP_SYNTHBET } from '../../../modules/nf-neuro/betcrop/synthbet/main'
+include { BETCROP_CROPVOLUME as CROPDWI } from '../../../modules/nf-neuro/betcrop/cropvolume/main'
+include { BETCROP_CROPVOLUME as CROPMASK } from '../../../modules/nf-neuro/betcrop/cropvolume/main'
+include { IMAGE_CONVERT as CONVERT } from '../../../modules/nf-neuro/image/convert'
 include { BETCROP_FSLBETCROP } from '../../../modules/nf-neuro/betcrop/fslbetcrop/main'
-include { BETCROP_CROPVOLUME } from '../../../modules/nf-neuro/betcrop/cropvolume/main'
+include { BETCROP_CROPVOLUME as CROPB0 } from '../../../modules/nf-neuro/betcrop/cropvolume/main'
 include { PREPROC_N4 as N4_DWI } from '../../../modules/nf-neuro/preproc/n4/main'
 include { PREPROC_NORMALIZE as NORMALIZE_DWI } from '../../../modules/nf-neuro/preproc/normalize/main'
 include { IMAGE_RESAMPLE as RESAMPLE_DWI } from '../../../modules/nf-neuro/image/resample/main'
@@ -19,6 +25,7 @@
         ch_b0            // Channel: [ val(meta), b0 ], optional
         ch_rev_b0        // channel: [ val(meta), rev-b0 ], optional
         ch_config_topup  // channel: [ 'topup.cnf' ], optional
+        ch_weights       // channel: [ 'weights' ], optional
 
     main:
 
@@ -67,24 +74,71 @@
         ch_versions = ch_versions.mix(TOPUP_EDDY.out.versions.first())
 
         // ** Bet-crop DWI ** //
-        ch_betcrop_dwi = TOPUP_EDDY.out.dwi
-            .join(TOPUP_EDDY.out.bval)
-            .join(TOPUP_EDDY.out.bvec)
+        if ( params.dwi_run_synthstrip ) {
 
-        BETCROP_FSLBETCROP ( ch_betcrop_dwi )
-        ch_versions = ch_versions.mix(BETCROP_FSLBETCROP.out.versions.first())
+            ch_pwd_avg = TOPUP_EDDY.out.dwi
+                .join(TOPUP_EDDY.out.bval)
+                .map{ it + [[]] }
+
+            IMAGE_POWDERAVERAGE ( ch_pwd_avg )
+            ch_versions = ch_versions.mix(IMAGE_POWDERAVERAGE.out.versions.first())
+            ch_pwdavg = IMAGE_POWDERAVERAGE.out.pwd_avg
+
+            ch_synthstrip = IMAGE_POWDERAVERAGE.out.pwd_avg
+                .join(ch_weights, remainder: true)
+                .map{ it[0..1] + [it[2] ?: []] }
+
+            BETCROP_SYNTHBET ( ch_synthstrip )
+            ch_versions = ch_versions.mix(BETCROP_SYNTHBET.out.versions.first())
+
+            ch_apply_mask = TOPUP_EDDY.out.dwi
+                .join(BETCROP_SYNTHBET.out.brain_mask)
+
+            BET_DWI ( ch_apply_mask )
+            ch_versions = ch_versions.mix(BET_DWI.out.versions.first())
+
+            CROPDWI ( BET_DWI.out.image
+                .map{ it + [[]] })
+            ch_versions = ch_versions.mix(CROPDWI.out.versions.first())
+
+            ch_cropmask = BETCROP_SYNTHBET.out.brain_mask
+                .join(CROPDWI.out.bounding_box)
+            CROPMASK ( ch_cropmask )
+            ch_versions = ch_versions.mix(CROPMASK.out.versions.first())
+
+            CONVERT ( CROPMASK.out.image )
+            ch_versions = ch_versions.mix(CONVERT.out.versions.first())
+
+            ch_dwi = CROPDWI.out.image
+            ch_mask = CONVERT.out.image
+            ch_bbox = CROPDWI.out.bounding_box
+
+        } else {
+
+            ch_pwdavg = Channel.empty()
+            ch_betcrop_dwi = TOPUP_EDDY.out.dwi
+                .join(TOPUP_EDDY.out.bval)
+                .join(TOPUP_EDDY.out.bvec)
+
+            BETCROP_FSLBETCROP ( ch_betcrop_dwi )
+            ch_versions = ch_versions.mix(BETCROP_FSLBETCROP.out.versions.first())
+
+            ch_dwi = BETCROP_FSLBETCROP.out.image
+            ch_mask = BETCROP_FSLBETCROP.out.mask
+            ch_bbox = BETCROP_FSLBETCROP.out.bbox
+
+        }
 
         // ** Crop b0 ** //
         ch_crop_b0 = TOPUP_EDDY.out.b0
-            .join(BETCROP_FSLBETCROP.out.bbox)
-
-        BETCROP_CROPVOLUME ( ch_crop_b0 )
-        ch_versions = ch_versions.mix(BETCROP_CROPVOLUME.out.versions.first())
+            .join(ch_bbox)
+        CROPB0 ( ch_crop_b0 )
+        ch_versions = ch_versions.mix(CROPB0.out.versions.first())
 
         // ** N4 DWI ** //
-        ch_N4 = BETCROP_FSLBETCROP.out.image
-            .join(BETCROP_CROPVOLUME.out.image)
-            .join(BETCROP_FSLBETCROP.out.mask)
+        ch_N4 = ch_dwi
+            .join(CROPB0.out.image)
+            .join(ch_mask)
 
         N4_DWI ( ch_N4 )
         ch_versions = ch_versions.mix(N4_DWI.out.versions.first())
@@ -93,7 +147,7 @@
         ch_normalize = N4_DWI.out.image
             .join(TOPUP_EDDY.out.bval)
             .join(TOPUP_EDDY.out.bvec)
-            .join(BETCROP_FSLBETCROP.out.mask)
+            .join(ch_mask)
 
         NORMALIZE_DWI ( ch_normalize )
         ch_versions = ch_versions.mix(NORMALIZE_DWI.out.versions.first())
@@ -114,8 +168,7 @@
         ch_versions = ch_versions.mix(EXTRACTB0_RESAMPLE.out.versions.first())
 
         // ** Resample mask ** //
-        ch_resample_mask = BETCROP_FSLBETCROP.out.mask
-            .map{ it + [[]] }
+        ch_resample_mask = ch_mask.map{ it + [[]] }
 
         RESAMPLE_MASK ( ch_resample_mask )
         ch_versions = ch_versions.mix(RESAMPLE_MASK.out.versions.first())
@@ -124,9 +177,10 @@
         dwi_resample        = RESAMPLE_DWI.out.image        // channel: [ val(meta), dwi-resampled ]
         bval                = TOPUP_EDDY.out.bval           // channel: [ val(meta), bval-corrected ]
         bvec                = TOPUP_EDDY.out.bvec           // channel: [ val(meta), bvec-corrected ]
+        pwdavg              = ch_pwdavg                     // channel: [ val(meta), [ pwdavg ] ]
         b0                  = EXTRACTB0_RESAMPLE.out.b0     // channel: [ val(meta), b0-resampled ]
         b0_mask             = RESAMPLE_MASK.out.image       // channel: [ val(meta), b0-mask ]
-        dwi_bounding_box    = BETCROP_FSLBETCROP.out.bbox   // channel: [ val(meta), dwi-bounding-box ]
+        dwi_bounding_box    = ch_bbox                       // channel: [ val(meta), [ dwi_bounding_box ] ]
         dwi_topup_eddy      = TOPUP_EDDY.out.dwi            // channel: [ val(meta), dwi-after-topup-eddy ]
         dwi_n4              = N4_DWI.out.image              // channel: [ val(meta), dwi-after-n4 ]
         versions            = ch_versions                   // channel: [ versions.yml ]

'subworkflows/nf-neuro/preproc_dwi/tests/main.nf.test.snap' is unchanged
'subworkflows/nf-neuro/preproc_dwi/tests/tags.yml' is unchanged
'subworkflows/nf-neuro/preproc_dwi/tests/nextflow.config' is unchanged
'subworkflows/nf-neuro/preproc_dwi/tests/main.nf.test' is unchanged
************************************************************
