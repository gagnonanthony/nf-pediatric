nextflow_pipeline {

    options "-stub-run"

    name "Test nf-pediatric profile freesurfer"
    script "../main.nf"

    test("Freesurfer profile - freesurfer - should run successfully") {

        when {
            params {

                params.input = "$projectDir/tests/data/samplesheet_testtracking.csv"
                params.outdir = "test_results/"

                params.freesurfer = true
                params.fs_license = "https://www.dropbox.com/scl/fi/0s8lp6lydyd0rxawxb4jm/license.txt?rlkey=hz54oc0d4sor69avqphtrjvgn&st=9e0yij97&dl=0"

            }
        }

        then {
            assert workflow.success
            assert workflow.trace.tasks().size() == 6
        }

    }

    test("Freesurfer profile - fastsurfer - should run successfully") {

        when {
            params {

                params.input = "$projectDir/tests/data/samplesheet_testtracking.csv"
                params.outdir = "test_results/"

                params.freesurfer = true
                params.use_fastsurfer = true
                params.fs_license = "https://www.dropbox.com/scl/fi/0s8lp6lydyd0rxawxb4jm/license.txt?rlkey=hz54oc0d4sor69avqphtrjvgn&st=9e0yij97&dl=0"

            }
        }

        then {
            assert workflow.success
            assert workflow.trace.tasks().size() == 6
        }

    }

    test("Freesurfer profile - without license - should fail") {

        when {
            params {

                params.input = "$projectDir/tests/data/samplesheet_testtracking.csv"
                params.outdir = "test_results/"

                params.freesurfer = true
                params.use_fastsurfer = true

            }
        }

        then {
            assert workflow.failed
            assert workflow.stdout.contains("No license file path provided. Please specify the path using --fs_license parameter.")
        }

    }

    test("Freesurfer profile - wrong license path - should fail") {

        when {
            params {

                params.input = "$projectDir/tests/data/samplesheet_testtracking.csv"
                params.outdir = "test_results/"

                params.freesurfer = true
                params.use_fastsurfer = true

                params.fs_license = "./not/a/valid/path/license.txt"

            }
        }

        then {
            assert workflow.failed
            assert workflow.stderr.contains("* --fs_license (./not/a/valid/path/license.txt): the file or directory './not/a/valid/path/license.txt' does not exist")
        }
    }
}
