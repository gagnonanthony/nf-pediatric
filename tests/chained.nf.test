nextflow_pipeline {

    options "-stub-run"

    name "Test nf-pediatric all profiles chained"
    script "../main.nf"

/* ** COMMENTED OUT FOR NOW, UNTIL WE HAVE ACCESS TO THE SCIL'S RUNNERS. ** //
    test("Freesurfer + connectomics profiles - should run successfully") {

        when {
            params {

                params.input = "$projectDir/tests/data/samplesheet_testconn.csv"
                params.outdir = "test_results/"

                params.connectomics = true
                params.freesurfer = true
                params.fs_license = "https://www.dropbox.com/scl/fi/0s8lp6lydyd0rxawxb4jm/license.txt?rlkey=hz54oc0d4sor69avqphtrjvgn&st=9e0yij97&dl=0"

            }
        }

        then {
            assert workflow.success
            assert workflow.trace.tasks().size() == 9
        }

    }
*/
    test("Connectomics + tracking profiles - should run successfully") {

        when {
            params {

                params.input = "$projectDir/tests/data/samplesheet_testtracking.csv"
                params.outdir = "test_results/"

                params.connectomics = true
                params.tracking = true

            }
        }

        then {
            assert workflow.success
            assert workflow.trace.tasks().size() == 32
        }

    }

    test("Connectomics + tracking profiles with additional metrics - should run successfully") {

        when {
            params {

                params.input = "$projectDir/tests/data/samplesheet_testtracking_withmetrics.csv"
                params.outdir = "test_results/"

                params.connectomics = true
                params.tracking = true

            }
        }

        then {
            assert workflow.success
            assert workflow.trace.tasks().size() == 32
        }

    }

/* UNTIL WE HAVE SCIL'S RUNNERS, WE CAN'T RUN THIS TEST. ** //
    test("Connectomics + tracking + infant profiles - should run successfully") {

        when {
            params {

                params.input = "$projectDir/tests/data/samplesheet_testall_infant.csv"
                params.outdir = "test_results/"

                params.connectomics = true
                params.tracking = true
                params.infant = true

                // ** Infant specific parameters ** //
                params.dwi_run_synthstrip               = true
                params.dwi_normalize_fa_mask_threshold  = 0.10
                params.fodf_max_fa_threshold            = 0.01
                params.fodf_min_md_threshold            = 0.00185
                params.frf_manual_frf                   = "12,5,5"
                params.run_pft_tracking                 = false
                params.local_min_len                    = 15
                params.local_fa_seeding_mask_threshold  = 0.10

            }
        }

        then {
            assert workflow.success
            assert workflow.trace.tasks().size() == 35
        }

    }
*/

}
