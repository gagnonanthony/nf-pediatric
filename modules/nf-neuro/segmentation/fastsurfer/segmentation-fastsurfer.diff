Changes in component 'nf-neuro/segmentation/fastsurfer'
'modules/nf-neuro/segmentation/fastsurfer/environment.yml' is unchanged
'modules/nf-neuro/segmentation/fastsurfer/meta.yml' is unchanged
Changes in 'segmentation/fastsurfer/main.nf':
--- modules/nf-neuro/segmentation/fastsurfer/main.nf
+++ modules/nf-neuro/segmentation/fastsurfer/main.nf
@@ -1,35 +1,54 @@
 process SEGMENTATION_FASTSURFER {
     tag "$meta.id"
-    label 'process_single'
+    label 'process_high'
 
-    container "${ 'deepmi/fastsurfer:cpu-v2.2.0' }"
-
-    containerOptions '--entrypoint ""'
+    container "${ 'gagnonanthony/nf-pediatric-fastsurfer:v2.3.3' }"
+    containerOptions {
+        (workflow.containerEngine == 'docker') ? '--entrypoint ""' : ''
+    }
 
     input:
         tuple val(meta), path(anat), path(fs_license)
 
     output:
-        tuple val(meta), path("*_fastsurfer")    , emit: fastsurferdirectory
-        path "versions.yml"                 , emit: versions
+        tuple val(meta), path("*_fastsurfer")       , emit: fastsurferdirectory
+        tuple val(meta), path("*__final_t1.nii.gz") , emit: final_t1
+        path "versions.yml"                         , emit: versions
 
     when:
     task.ext.when == null || task.ext.when
 
     script:
-        def prefix = task.ext.prefix ?: "${meta.id}"
-        def acq3T = task.ext.acq3T ? "--3T" : ""
-        def FASTSURFER_HOME = "/fastsurfer"
-        def SUBJECTS_DIR = "${prefix}_fastsurfer"
+    def prefix = task.ext.prefix ?: "${meta.id}"
+    def acq3T = task.ext.acq3T ? "--3T" : ""
+    def FASTSURFER_HOME = "/fastsurfer"
+    def SUBJECTS_DIR = "${prefix}__fastsurfer"
+    def cerebnet = task.ext.cerebnet ? "" : "--no_cereb"
+    def hypvinn = task.ext.hypvinn ? "" : "--no_hypothal"
+
+    // ** Adding a registration to .gca atlas to generate the talairach.m3z file (subcortical atlas segmentation ** //
+    // ** wont work without it). A little time consuming but necessary. For FreeSurfer 7.3.2, RB_all_2020-01-02.gca ** //
+    // ** is the default atlas. Update when bumping FreeSurfer version. ** //
     """
-    mkdir ${prefix}_fastsurfer/
+    mkdir ${prefix}__fastsurfer/
+    export FS_LICENSE=\$(realpath $fs_license)
+
     $FASTSURFER_HOME/run_fastsurfer.sh  --allow_root \
                                         --sd \$(realpath ${SUBJECTS_DIR}) \
                                         --fs_license \$(realpath $fs_license) \
                                         --t1 \$(realpath ${anat}) \
                                         --sid ${prefix} \
-                                        --seg_only --py python3 \
+                                        --parallel \
+                                        --threads $task.cpus \
+                                        --py python3 \
                                         ${acq3T}
+
+    mri_ca_register -align-after -nobigventricles -mask ${prefix}__fastsurfer/${prefix}/mri/brainmask.mgz \
+        -T ${prefix}__fastsurfer/${prefix}/mri/transforms/talairach.lta -threads $task.cpus \
+        ${prefix}__fastsurfer/${prefix}/mri/norm.mgz \${FREESURFER_HOME}/average/RB_all_2020-01-02.gca \
+        ${prefix}__fastsurfer/${prefix}/mri/transforms/talairach.m3z
+
+    mri_convert ${prefix}__fastsurfer/${prefix}/mri/antsdn.brain.mgz ${prefix}__final_t1.nii.gz
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
@@ -38,14 +57,25 @@
     """
 
     stub:
-        def prefix = task.ext.prefix ?: "${meta.id}"
+    def prefix = task.ext.prefix ?: "${meta.id}"
+    def FASTSURFER_HOME = "/fastsurfer"
 
     """
-    $FASTSURFER_HOME/run_fastsurfer.sh --version
+    mkdir ${prefix}__fastsurfer/
+    touch ${prefix}__final_t1.nii.gz
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
-        fastersurfer: 2.2.0+9f37d02
+        fastsurfer: \$($FASTSURFER_HOME/run_fastsurfer.sh --version)
     END_VERSIONS
+
+    function handle_code () {
+    local code=\$?
+    ignore=( 1 )
+    exit \$([[ " \${ignore[@]} " =~ " \$code " ]] && echo 0 || echo \$code)
+    }
+    trap 'handle_code' ERR
+
+    $FASTSURFER_HOME/run_fastsurfer.sh --version
     """
 }

Changes in 'segmentation/fastsurfer/tests/main.nf.test.snap':
--- modules/nf-neuro/segmentation/fastsurfer/tests/main.nf.test.snap
+++ modules/nf-neuro/segmentation/fastsurfer/tests/main.nf.test.snap
@@ -1,4 +1,16 @@
 {
+    "segmentation - fastsurfer - stub-run": {
+        "content": [
+            [
+                "versions.yml:md5,b263ce2ef1818492be3805ba8e49b50f"
+            ]
+        ],
+        "meta": {
+            "nf-test": "0.9.0",
+            "nextflow": "24.10.1"
+        },
+        "timestamp": "2024-12-12T13:38:50.551338"
+    },
     "segmentation - fastsurfer": {
         "content": [
             "test_fastsurfer",

'modules/nf-neuro/segmentation/fastsurfer/tests/tags.yml' is unchanged
'modules/nf-neuro/segmentation/fastsurfer/tests/nextflow.config' is unchanged
Changes in 'segmentation/fastsurfer/tests/main.nf.test':
--- modules/nf-neuro/segmentation/fastsurfer/tests/main.nf.test
+++ modules/nf-neuro/segmentation/fastsurfer/tests/main.nf.test
@@ -47,4 +47,27 @@
             )
         }
     }
+
+    test("segmentation - fastsurfer - stub-run") {
+        options "-stub-run"
+        when {
+            process {
+                """
+                input[0] = LOAD_DATA.out.test_data_directory.map{
+                    test_data_directory -> [
+                        [ id:'test' ],
+                        file("\${test_data_directory}/anat_image.nii.gz"),
+                        file("\${test_data_directory}/license.txt")
+                    ]
+                }
+                """
+            }
+        }
+        then {
+            assertAll(
+                { assert process.success },
+                { assert snapshot(process.out.versions).match() }
+            )
+        }
+    }
 }

************************************************************
