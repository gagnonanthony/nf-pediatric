/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    //** FREESURFERFLOW **//
    withName: 'FASTSURFER' {
        ext.acq3T = params.acq3T
    }

    //** T1 preprocessing **//
    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1:DENOISING_NLMEANS' {
        ext.number_of_coils = params.t1_denoise_number_of_coils
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1:PREPROC_N4' {
        ext.bspline_knot_per_voxel = params.t1_bias_bspline_knot_per_voxel
        ext.shrink_factor = params.t1_bias_shrink_factor
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1:IMAGE_RESAMPLE' {
        ext.voxel_size = params.t1_resample_voxel_size
        ext.interp = params.t1_resample_interp
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1:BETCROP_SYNTHBET' {
        ext.border = params.t1_synthstrip_border
        ext.nocsf = params.t1_synthstrip_nocsf
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_T1:BETCROP_CROPVOLUME_T1' {
        ext.output_bbox = true
    }

    //** DWI preprocessing **//
    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:DENOISE_DWI' {
        ext.extent = params.dwi_denoise_patch_size
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:DENOISE_REVDWI' {
        ext.extent = params.dwi_denoise_patch_size
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:TOPUP_EDDY:PREPROC_TOPUP' {
        ext.prefix_topup = params.dwi_susceptibility_output_prefix
        ext.config_topup = params.dwi_susceptibility_config_file
        ext.readout = params.dwi_susceptibility_readout
        ext.b0_thr_extract_b0 = params.dwi_susceptibility_b0_threshold
        ext.encoding = params.dwi_susceptibility_encoding_dir
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:TOPUP_EDDY:PREPROC_EDDY' {
        ext.slice_drop_flag = params.dwi_motion_and_eddy_restore_slices
        ext.prefix_topup = params.dwi_susceptibility_output_prefix
        ext.bet_topup_before_eddy_f = params.dwi_motion_and_eddy_bet_f_threshold
        ext.b0_thr_extract_b0 = params.dwi_susceptibility_b0_threshold
        ext.readout = params.dwi_susceptibility_readout
        ext.eddy_cmd = params.dwi_motion_and_eddy_command
        ext.bet_prelim_f = params.dwi_motion_and_eddy_bet_f_threshold
        ext.encoding = params.dwi_susceptibility_encoding_dir
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:IMAGE_POWDERAVERAGE' {
        ext.b0_thr = params.dwi_pwdavg_b0_thr
        ext.shells = params.dwi_pwdavg_shells
        ext.shell_thr = params.dwi_pwdavg_shell_thr
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:BETCROP_SYNTHBET' {
        ext.border = params.dwi_synthstrip_border
        ext.nocsf = params.dwi_synthstrip_nocsf
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:CROPDWI' {
        ext.output_bbox = true
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:BETCROP_FSLBETCROP' {
        ext.bet_f = params.dwi_bet_f_threshold
        ext.b0_thr = params.dwi_bet_b0_threshold
        ext.crop = true
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:N4_DWI' {
        ext.bspline_knot_per_voxel = params.dwi_bias_bspline_knot_per_voxel
        ext.shrink_factor = params.dwi_bias_shrink_factor
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:NORMALIZE_DWI' {
        ext.fa_mask_threshold = params.dwi_normalize_fa_mask_threshold
        ext.dwi_shell_tolerance = params.dwi_normalize_shell_tolerance
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:RESAMPLE_DWI' {
        ext.voxel_size = params.dwi_resample_voxel_size
        ext.interp = params.dwi_resample_interp
        ext.first_suffix = 'dwi'
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:EXTRACTB0_RESAMPLE' {
        ext.b0_threshold = params.dwi_extract_b0_threshold
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:PREPROC_DWI:RESAMPLE_MASK' {
        ext.voxel_size = params.dwi_resample_mask_voxel_size
        ext.interp = params.dwi_resample_mask_interp
        ext.first_suffix = 'mask'
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:RECONST_DTIMETRICS' {
        ext.dwi_shell_tolerance = params.dti_shell_tolerance
        ext.max_dti_shell_value = params.dti_max_shell_value
        ext.b0_thr_extract_b0 = params.dti_b0_threshold

        // ** DTI metrics to output ** //
        ext.ad = true
        ext.rd = true
        ext.md = true
        ext.fa = true
        ext.ga = true
        ext.evecs = true
        ext.evals = true
        ext.rgb = true
        ext.mode = true
        ext.norm = true
        ext.tensor = true
        ext.nonphysical = true
        ext.pulsation = true
        ext.residual = true
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:RECONST_FRF' {
        ext.fa = params.frf_fa
        ext.fa_min = params.frf_min_fa
        ext.nvox_min = params.frf_nvox_min
        ext.roi_radius = params.frf_roi_radius
        ext.dwi_shell_tolerance = params.frf_dwi_shell_tolerance
        ext.max_dti_shell_value = params.frf_max_dti_shell_value
        ext.min_fodf_shell_value = params.frf_min_fodf_shell_value
        ext.b0_thr_extract_b0 = params.frf_b0_threshold
        ext.set_method = params.frf_set_method
        ext.set_frf = params.frf_set_frf
        ext.manual_frf = params.frf_manual_frf
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:RECONST_FODF' {
        ext.dwi_shell_tolerance = params.fodf_shell_tolerance
        ext.min_fodf_shell_value = params.fodf_min_fodf_shell_value
        ext.b0_thr_extract_b0 = params.fodf_b0_threshold
        ext.sh_order = params.fodf_sh_order
        ext.sh_basis = params.fodf_sh_basis
        ext.set_method = params.fodf_set_method
        ext.relative_threshold = params.fodf_relative_threshold
        ext.fodf_metrics_a_factor = params.fodf_a_factor
        ext.fa_threshold = params.fodf_max_fa_threshold
        ext.md_threshold = params.fodf_min_md_threshold
        ext.processes = 4

        // ** FODF metrics to output ** //
        ext.peaks = true
        ext.peak_values = true
        ext.peak_indices = true
        ext.afd_max = true
        ext.afd_total = true
        ext.afd_sum = true
        ext.nufo = true
        ext.ventricles_mask = true
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:MASK_COMBINE' {
        ext.local_fa_seeding_mask_thr = params.local_fa_seeding_mask_threshold
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:REGISTRATION_ANTSAPPLYTRANSFORMS' {
        ext.dimensionality = params.reg_dimensionality
        ext.interpolation = params.reg_interpolation
        ext.output_dtype = params.reg_output_dtype
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRACKING_PFTTRACKING' {
        ext.pft_fa_seeding_mask_threshold = params.pft_fa_threshold
        ext.pft_seeding_mask_type = params.pft_seeding_mask_type
        ext.pft_random_seed = params.pft_random_seed
        ext.pft_compress_streamlines = params.pft_compress
        ext.pft_compress_value = params.pft_compress_value
        ext.pft_algo = params.pft_algo
        ext.pft_seeding = params.pft_seeding_type
        ext.pft_nbr_seeds = params.pft_nbr_seeds
        ext.pft_step = params.pft_step
        ext.pft_theta = params.pft_theta
        ext.pft_sfthres = params.pft_sfthres
        ext.pft_sfthres_init = params.pft_sfthres_init
        ext.pft_min_len = params.pft_min_len
        ext.pft_max_len = params.pft_max_len
        ext.pft_particles = params.pft_particles
        ext.pft_back = params.pft_back
        ext.pft_front = params.pft_front
        ext.basis = params.pft_sh_basis
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRACKING_LOCALTRACKING' {
        ext.local_fa_tracking_mask_threshold = params.local_fa_tracking_mask_threshold
        ext.local_fa_seeding_mask_threshold = params.local_fa_seeding_mask_threshold
        ext.local_tracking_mask_type = params.local_tracking_mask_type
        ext.local_seeding_mask_type = params.local_seeding_mask_type
        ext.local_step = params.local_step
        ext.local_random_seed = params.local_random_seed
        ext.local_seeding = params.local_seeding_type
        ext.local_nbr_seeds = params.local_nbr_seeds
        ext.local_min_len = params.local_min_len
        ext.local_max_len = params.local_max_len
        ext.local_theta = params.local_theta
        ext.local_sfthres = params.local_sfthres
        ext.local_algo = params.local_algo
        ext.local_compress_streamlines = params.local_compress
        ext.local_compress_value = params.local_compress_value
        ext.basis = params.local_sh_basis
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRANSFORM_LABELS' {
        ext.dimensionality = params.labels_transform_dimensionality
        ext.first_suffix = params.labels_output_suffix
        ext.interpolation = params.labels_interpolation
        ext.output_dtype = params.labels_output_dtype
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRACTOGRAM_DECOMPOSE' {
        ext.no_pruning = params.decompose_no_pruning
        ext.no_remove_loops = params.decompose_no_remove_loops
        ext.no_remove_outliers = params.decompose_no_remove_outliers
        ext.no_remove_curv = params.decompose_no_remove_curv
        ext.min_len = params.decompose_min_len
        ext.max_len = params.decompose_max_len
        ext.outlier_threshold = params.decompose_outlier_threshold
        ext.max_angle = params.decompose_max_angle
        ext.max_curv = params.decompose_max_curv
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:FILTERING_COMMIT' {
        ext.para_diff = params.commit_para_diff
        ext.iso_diff = params.commit_iso_diff
        ext.perp_diff = params.commit_perp_diff
        ext.ball_stick = params.commit_ball_stick
        ext.commit2 = params.run_commit2
        ext.commit2_lambda = params.commit2_lambda
        ext.nbr_dir = params.commit_nbr_dir
        ext.shell_tolerance = params.commit_shell_tolerance
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:CONNECTIVITY_AFDFIXEL' {
        ext.sh_basis = params.afd_fixel_sh_basis
        ext.length_weighting = params.afd_fixel_length_weighting
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
