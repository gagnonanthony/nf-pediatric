/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRANSFORM_LABELS' {
        ext.dimensionality = params.labels_transform_dimensionality
        ext.first_suffix = params.labels_output_suffix
        ext.interpolation = params.labels_interpolation
        ext.output_dtype = params.labels_output_dtype
        publishDir = [
            path: { "${params.outdir}/${meta.id}/anat/"},
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                if ( filename.contains("_warped.nii.gz") ) { "${meta.id}_space-DWI_seg-${params.atlas_name}_dseg.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRACTOGRAM_DECOMPOSE' {
        ext.no_pruning = params.decompose_no_pruning
        ext.no_remove_loops = params.decompose_no_remove_loops
        ext.no_remove_outliers = params.decompose_no_remove_outliers
        ext.no_remove_curv = params.decompose_no_remove_curv
        ext.min_len = params.decompose_min_len
        ext.max_len = params.decompose_max_len
        ext.outlier_threshold = params.decompose_outlier_threshold
        ext.max_angle = params.decompose_max_angle
        ext.max_curv = params.decompose_max_curv
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:FILTERING_COMMIT' {
        ext.para_diff = params.commit_para_diff
        ext.iso_diff = params.commit_iso_diff
        ext.perp_diff = params.commit_perp_diff
        ext.ball_stick = params.commit_ball_stick
        ext.commit2 = params.run_commit2
        ext.commit2_lambda = params.commit2_lambda
        ext.nbr_dir = params.commit_nbr_dir
        ext.shell_tolerance = params.commit_shell_tolerance
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                if ( filename.contains("commit.h5") ) { "${meta.id}_desc-filtered_tracking.h5" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:CONNECTIVITY_AFDFIXEL' {
        ext.sh_basis = params.afd_fixel_sh_basis
        ext.length_weighting = params.afd_fixel_length_weighting
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                if ( filename.contains("afd_fixel.h5") ) { "${meta.id}_desc-preproc_tracking.h5" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:CONNECTIVITY_METRICS' {
        ext.atlas = params.atlas_name
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:CONNECTIVITY_VISUALIZE' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/figures/"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
