/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: 'NF_PEDIATRIC:PEDIATRIC:TISSUESEG' {
        ext.surf = params.mcribs_surf
        ext.jointhresh = params.mcribs_jointhresh
        ext.fastcollision = params.mcribs_fastcollision
        ext.nopialoutside = params.mcribs_nopialoutside
        ext.cortical = params.mcribs_cortical
        ext.aparcaseg = params.mcribs_aparcaseg
        ext.stats = params.mcribs_stats
        ext.seed = params.mcribs_seed
        publishDir = [
            path: { params.fs_output_dir ?: "${params.outdir}/../mcribs-2.1.0/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "_${meta.session}" : ""
                if ( filename.contains("mcribs") ) { "${meta.id}${ses}" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:TRANSFORMTISSUES' {
        ext.suffix = "tissue_seg"
        ext.dimensionality = 3
        ext.interpolation = "NearestNeighbor"
        ext.output_dtype = "int"
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:MASKS' {
        ext.local_fa_seeding_mask_thr = params.local_fa_seeding_mask_threshold
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("wm_mask") ) { "${meta.id}_${ses}label-WM_mask.nii.gz" }
                else if ( filename.contains("gm_mask") ) { "${meta.id}_${ses}label-GM_mask.nii.gz" }
                else if ( filename.contains("csf_mask") ) { "${meta.id}_${ses}label-CSF_mask.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: 'NF_PEDIATRIC:PEDIATRIC:FASTSEG' {
        publishDir = [
            path: { meta.session ? "${params.outdir}/${meta.id}/${meta.session}/anat/" : "${params.outdir}/${meta.id}/anat/" },
            mode: params.publish_dir_mode,
            saveAs: {
                filename ->
                def ses = meta.session ? "${meta.session}_" : ""
                if ( filename.contains("mask_wm") ) { "${meta.id}_${ses}space-DWI_label-WM_mask.nii.gz" }
                else if ( filename.contains("mask_gm") ) { "${meta.id}_${ses}space-DWI_label-GM_mask.nii.gz" }
                else if ( filename.contains("mask_csf") ) { "${meta.id}_${ses}space-DWI_label-CSF_mask.nii.gz" }
                else if ( filename.contains("map_wm") ) { "${meta.id}_${ses}space-DWI_label-WM_probseg.nii.gz" }
                else if ( filename.contains("map_gm") ) { "${meta.id}_${ses}space-DWI_label-GM_probseg.nii.gz" }
                else if ( filename.contains("map_csf") ) { "${meta.id}_${ses}space-DWI_label-CSF_probseg.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }
}
